<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fleet.provider.admin.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.fleet.common.entity.user.User">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="nick_name" property="nickName"/>
        <result column="email" property="email"/>
        <result column="pwd" property="pwd"/>
        <result column="pwd_salt" property="pwdSalt"/>
        <result column="state" property="state"/>
        <result column="reg_time" property="regTime"/>
        <result column="deleted" property="deleted"/>
    </resultMap>

    <sql id="Base_Column_List">
		`id`, `name`, `nick_name`, `email`, `pwd`, `pwd_salt`, `state`, `reg_time`, `deleted`
	</sql>

    <insert id="insert" parameterType="com.fleet.common.entity.user.User" useGeneratedKeys="true" keyProperty="id">
        insert into `user` (
        <trim suffixOverrides=",">
            <if test="name != null">`name`,</if>
            <if test="nickName != null">`nick_name`,</if>
            <if test="email != null">`email`,</if>
            <if test="pwd != null">`pwd`,</if>
            <if test="pwdSalt != null">`pwd_salt`,</if>
            <if test="state != null">`state`,</if>
            <if test="regTime != null">`reg_time`,</if>
            <if test="deleted != null">`deleted`,</if>
        </trim>
        ) values (
        <trim suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="nickName != null">#{nickName},</if>
            <if test="email != null">#{email},</if>
            <if test="pwd != null">#{pwd},</if>
            <if test="pwdSalt != null">#{pwdSalt},</if>
            <if test="state != null">#{state},</if>
            <if test="regTime != null">#{regTime},</if>
            <if test="deleted != null">#{deleted},</if>
        </trim>
        )
    </insert>

    <update id="delete" parameterType="com.fleet.common.entity.user.User">
        update `user` set `deleted` = 1
        <where>
            <if test="id != null">and `id` = #{id}</if>
            <if test="name != null">and `name` = #{name}</if>
            <if test="nickName != null">and `nick_name` = #{nickName}</if>
            <if test="email != null">and `email` = #{email}</if>
            <if test="pwd != null">and `pwd` = #{pwd}</if>
            <if test="pwdSalt != null">and `pwd_salt` = #{pwdSalt}</if>
            <if test="state != null">and `state` = #{state}</if>
            <if test="regTime != null">and `reg_time` = #{regTime}</if>
        </where>
    </update>

    <update id="update" parameterType="com.fleet.common.entity.user.User">
        update `user`
        <set>
            <if test="name != null">`name` = #{name},</if>
            <if test="nickName != null">`nick_name` = #{nickName},</if>
            <if test="email != null">`email` = #{email},</if>
            <if test="pwd != null">`pwd` = #{pwd},</if>
            <if test="pwdSalt != null">`pwd_salt` = #{pwdSalt},</if>
            <if test="state != null">`state` = #{state},</if>
            <if test="deleted != null">`deleted` = #{deleted},</if>
        </set>
        where id = #{id}
    </update>

    <select id="get" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `user`
        <where>
            <if test="id != null">and `id` = #{id}</if>
            <if test="name != null">and `name` = #{name}</if>
            <if test="nickName != null">and `nick_name` = #{nickName}</if>
            <if test="email != null">and `email` = #{email}</if>
            <if test="pwd != null">and `pwd` = #{pwd}</if>
            <if test="pwdSalt != null">and `pwd_salt` = #{pwdSalt}</if>
            <if test="state != null">and `state` = #{state}</if>
            <if test="regTime != null">and `reg_time` = #{regTime}</if>
            <if test="deleted != null">and `deleted` = #{deleted}</if>
            <if test="deleted == null">and `deleted` = 0</if>
        </where>
        limit 1
    </select>

    <select id="list" resultMap="BaseResultMap">
        select u.`id`, u.`name`, u.`nick_name`, u.`email`, u.`pwd`, u.`pwd_salt`,
        u.`state`, u.`reg_time`, u.`deleted`
        from `user` as u
        left join `user_dept` as ud on u.`id` = ud.`id`
        left join `dept` as d on ud.`dept_id` = d.`dept_id`
        <where>
            <if test="id != null">and u.`id` = #{id}</if>
            <if test="name != null">and u.`name` = #{name}</if>
            <if test="nickName != null">and u.`nick_name` = #{nickName}</if>
            <if test="email != null">and u.`email` = #{email}</if>
            <if test="pwd != null">and u.`pwd` = #{pwd}</if>
            <if test="pwdSalt != null">and u.`pwd_salt` = #{pwdSalt}</if>
            <if test="state != null">and u.`state` = #{state}</if>
            <if test="regTime != null">and u.`reg_time` = #{regTime}</if>
            <if test="deleted != null">and u.`deleted` = #{deleted}</if>
            <if test="deleted == null">and u.`deleted` = 0</if>
            <if test="deptId != null">and ud.`dept_id` = #{deptId}</if>
            <if test="deptIdList != null">
                <foreach item="id" collection="array" open="and ud.`dept_id` in (" separator="," close=")">
                    #{id}
                </foreach>
            </if>
            <if test="deptName != null">and d.`dept_name` = #{deptName}</if>
            and ud.`deleted` = 0 and d.`deleted` = 0
        </where>
    </select>
</mapper>

