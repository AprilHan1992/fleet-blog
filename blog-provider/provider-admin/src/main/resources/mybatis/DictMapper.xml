<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fleet.provider.admin.dao.DictDao">
    <resultMap id="BaseResultMap" type="com.fleet.common.entity.dict.Dict">
        <id column="id" property="id"/>
        <result column="group" property="group"/>
        <result column="remark" property="remark"/>
        <result column="deleted" property="deleted"/>
    </resultMap>

    <sql id="Base_Column_List">
		`id`, `group`, `remark`, `deleted`
	</sql>

    <insert id="insert" parameterType="com.fleet.common.entity.dict.Dict" useGeneratedKeys="true" keyProperty="id">
        insert into `dict` (
        <trim suffixOverrides=",">
            <if test="group != null">`group`,</if>
            <if test="remark != null">`remark`,</if>
            <if test="deleted != null">`deleted`,</if>
        </trim>
        ) values (
        <trim suffixOverrides=",">
            <if test="group != null">#{group},</if>
            <if test="remark != null">#{remark},</if>
            <if test="deleted != null">#{deleted},</if>
        </trim>
        )
    </insert>

    <update id="delete" parameterType="com.fleet.common.entity.dict.Dict">
        update `dict` set `deleted` = 1
        <where>
            <if test="id != null">and `id` = #{id}</if>
            <if test="group != null">and `group` = #{group}</if>
            <if test="remark != null">and `remark` = #{remark}</if>
            and `deleted` = 0
        </where>
    </update>

    <update id="deletes">
        update `dict` set `deleted` = 1
        <where>
            <foreach collection="array" item="id" open="`id` in (" separator="," close=")">
                #{id}
            </foreach>
            and `deleted` = 0
        </where>
    </update>

    <update id="update" parameterType="com.fleet.common.entity.dict.Dict">
        update `dict`
        <set>
            <if test="group != null">`group` = #{group},</if>
            <if test="remark != null">`remark` = #{remark},</if>
            <if test="deleted != null">`deleted` = #{deleted},</if>
        </set>
        where id = #{id}
    </update>

    <select id="get" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `dict`
        <where>
            <if test="id != null">and `id` = #{id}</if>
            <if test="group != null">and `group` = #{group}</if>
            <if test="remark != null">and `remark` = #{remark}</if>
            <if test="deleted != null">and `deleted` = #{deleted}</if>
            <if test="deleted == null">and `deleted` = 0</if>
        </where>
        limit 1
    </select>

    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `dict`
        <where>
            <if test="id != null">and `id` = #{id}</if>
            <if test="group != null">and `group` = #{group}</if>
            <if test="remark != null">and `remark` = #{remark}</if>
            <if test="deleted != null">and `deleted` = #{deleted}</if>
            <if test="deleted == null">and `deleted` = 0</if>
        </where>
    </select>

    <select id="idList" resultType="java.lang.Integer">
        select `id` from `dict`
        <where>
            <if test="id != null">and `id` = #{id}</if>
            <if test="group != null">and `group` = #{group}</if>
            <if test="remark != null">and `remark` = #{remark}</if>
            <if test="deleted != null">and `deleted` = #{deleted}</if>
            <if test="deleted == null">and `deleted` = 0</if>
        </where>
    </select>

    <select id="getDefaultValue" parameterType="java.lang.String" resultType="java.lang.String">
		select v.`value`
		from `dict` as d
		left join `value` as v on v.`dict_id` = d.`id`
		where d.`group` = #{group} and d.`deleted` = 0 and v.`is_default` = 1 and v.`deleted` = 0
		limit 1
	</select>

    <select id="getValue" parameterType="java.lang.String" resultType="java.lang.String">
		select v.`value`
		from `dict` as d
		left join `value` as v on v.`dict_id` = d.`id`
		where d.`group` = #{group} and d.`deleted` = 0 and v.`code` = #{code} and v.`deleted` = 0
		limit 1
	</select>
</mapper>
