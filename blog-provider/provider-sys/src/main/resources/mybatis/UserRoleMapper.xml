<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fleet.provider.sys.dao.UserRoleDao">
    <resultMap id="BaseResultMap" type="com.fleet.common.entity.user.UserRole">
        <result column="user_id" property="userId"/>
        <result column="role_id" property="roleId"/>
        <result column="deleted" property="deleted"/>
    </resultMap>

    <resultMap id="RoleResultMap" type="com.fleet.common.entity.role.Role">
        <id column="role_id" property="roleId"/>
        <result column="role_name" property="role"/>
        <result column="sort_value" property="sortValue"/>
        <result column="upper_id" property="upperId"/>
        <result column="deleted" property="deleted"/>
    </resultMap>

    <resultMap id="MenuResultMap" type="com.fleet.common.entity.menu.Menu">
        <id column="menu_id" property="menuId"/>
        <result column="menu_type" property="menuType"/>
        <result column="menu_name" property="menuName"/>
        <result column="menu_icon" property="menuIcon"/>
        <result column="menu_desc" property="menuDesc"/>
        <result column="href" property="href"/>
        <result column="target" property="target"/>
        <result column="permit" property="permit"/>
        <result column="sort_value" property="sortValue"/>
        <result column="opened" property="opened"/>
        <result column="enabled" property="enabled"/>
        <result column="create_time" property="createTime"/>
        <result column="edit_time" property="editTime"/>
        <result column="upper_id" property="upperId"/>
        <result column="deleted" property="deleted"/>
    </resultMap>

    <sql id="Base_Column_List">
		`user_id`, `role_id`, `deleted`
	</sql>

    <insert id="insert" parameterType="com.fleet.common.entity.user.UserRole">
		insert into `user_role`(`user_id`, `role_id`, `deleted`) values (#{userId}, #{roleId}, #{deleted})
		ON DUPLICATE KEY UPDATE user_id = #{userId}, role_id = #{roleId}, deleted = #{deleted}
	</insert>

    <update id="delete" parameterType="com.fleet.common.entity.user.UserRole">
        update `user_role` set `deleted` = 1
        <where>
            <if test="userId != null">and user_id = #{userId}</if>
            <if test="roleId != null">and `role_id` = #{roleId}</if>
        </where>
    </update>

    <update id="update" parameterType="com.fleet.common.entity.user.UserRole">
		insert into `user_role`(`user_id`, `role_id`, `deleted`) values (#{userId}, #{roleId}, #{deleted})
		ON DUPLICATE KEY UPDATE user_id = #{userId}, role_id = #{roleId}, deleted = #{deleted}
	</update>

    <select id="get" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `user_role`
        <where>
            <if test="userId != null">and user_id = #{userId}</if>
            <if test="roleId != null">and `role_id` = #{roleId}</if>
            <if test="deleted != null">and `deleted` = #{deleted}</if>
        </where>
        limit 1
    </select>

    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from `user_role`
        <where>
            <if test="userId != null">and user_id = #{userId}</if>
            <if test="roleId != null">and `role_id` = #{roleId}</if>
            <if test="deleted != null">and `deleted` = #{deleted}</if>
        </where>
    </select>

    <select id="userRoleList" parameterType="java.lang.Integer" resultMap="RoleResultMap">
		select r.`role_id`, r.`role_name`, r.`sort_value`, r.`upper_id`, r.`deleted`
		from `user_role` as ur
		left join `role` as r on r.role_id = ur.role_id
		where ur.user_id = #{userId} and ur.deleted = 0 and r.deleted = 0
	</select>

    <select id="userRoles" parameterType="java.lang.Integer" resultType="java.lang.String">
		select r.role_name
		from `user_role` as ur
		left join `role` as r on r.role_id = ur.role_id
		where ur.user_id = #{userId} and ur.deleted = 0 and r.deleted = 0
	</select>

    <select id="userMenuList" parameterType="java.lang.Integer" resultMap="MenuResultMap">
		select m.`menu_id`, m.`menu_type`, m.`menu_name`, m.`menu_icon`, m.`menu_desc`, m.`href`, m.`target`, m.`permit`, m.`sort_value`, m.`opened`, m.`enabled`, m.`create_time`, m.`edit_time`, m.`upper_id`, m.`deleted`
		from `user_role` as ur
		left join `role_menu` as rm on ur.role_id = rm.role_id
		left join `menu` as m on rm.menu_id = m.menu_id
		where m.enabled = 1 and m.deleted = 0 and (m.`menu_type` = 1 or m.`menu_type` = 2) and ((ur.user_id = #{userId} and rm.deleted = 0 and ur.deleted = 0) or m.opened = 1)
	</select>

    <select id="userPermits" parameterType="java.lang.Integer" resultType="java.lang.String">
		select m.`permit`
		from `user_role` as ur
		left join `role_menu` as rm on ur.role_id = rm.role_id
		left join `menu` as m on rm.menu_id = m.menu_id
		where m.enabled = 1 and m.deleted = 0 and m.`menu_type` = 3 and ((ur.user_id = #{userId} and rm.deleted = 0 and ur.deleted = 0) or m.opened = 1) and m.`permit` is not null and m.`permit` != ""
	</select>
</mapper>
